!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.csv_dataset.CSVDataset {
        path: "moreDataDAE 7-6 8ColNoRwBLK softPluslinear l1encodeFlt0.csv", # 'moreDataDAE 7-6 8ColNoRwBLK softPluslinear l1encode.csv', # 'Seperate action RLDataBlk noRw.csv', #'RLData.csv',
        task: 'regression',
        expect_labels: False,
        expect_headers: False,
        delimiter: ',',
        start: 0,
        stop: %(train_stop)i
    },
    model: !obj:pylearn2.models.autoencoder.Autoencoder { #.DenoisingAutoencoder {
        nvis : 7,
        nhid : %(nhid)i,
        irange : 0.05,
        #corruptor: !obj:pylearn2.corruption.BinomialCorruptor {
        #    corruption_level: .3,
        #},
        act_enc: "softplus", # "tanh",
        act_dec: null, #"tanh",    # Linear activation on the decoder side.
    },
    algorithm: !obj:pylearn2.training_algorithms.bgd.BGD {
        #learning_rate : 1e-3,
        batch_size : %(batch_size)i,
        monitoring_batches : %(monitoring_batches)i,
        monitoring_dataset : *train,
        cost : !obj:pylearn2.costs.autoencoder.MeanSquaredReconstructionError {},
        termination_criterion : !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: %(max_epochs)i,
        },
        conjugate: 1,
    },
    save_path: "%(save_path)s/daeSep_l2.pkl",
    save_freq: 1
}
